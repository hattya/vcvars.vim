*vcvars.txt*	 Work like vcvarsall.bat

Author:      Akinori Hattori <hattya@gmail.com>
Repository:  https://github.com/hattya/vcvars.vim
Last Change: 2020-10-18
License:     MIT License

CONTENTS					*vcvars-contents*

Introduction					|vcvars-introduction|
Usage						|vcvars-usage|
Interface					|vcvars-interface|
  Functions					|vcvars-functions|

==============================================================================
INTRODUCTION					*vcvars-introduction*

*vcvars.vim* is a Vim plugin which works like vcvarsall.bat.

==============================================================================
USAGE						*vcvars-usage*

|vcvars.vim| provides some functions, and it can use like:
>
	if vcvars#has('2019')
	  call vcvars#call('!nmake', '2019')
	endif

|vcvars#has()| checks that the Visual Studio 2019 is installed, and
|vcvars#call()| executes "!nmake" with it.

If you want to use the latest version of Visual Studio:
>
	call vcvars#call('!nmake', vcvars#list()[-1])

==============================================================================
INTERFACE					*vcvars-interface*

------------------------------------------------------------------------------
FUNCTIONS					*vcvars-functions*

vcvars#call({expr}, {version} [, {arch}])	*vcvars#call()*
	Executes {expr} with the specified {version} of Visual Studio. {expr}
	must be a |String| or |Funcref|.

	{version} is either a product name (e.g., "2019") or a version number
	(e.g., "16.0").

	{arch} is one of "x86", "x86-64", "x64", or "amd64".
	The default value is depending on the result of has('win64').

vcvars#clear()					*vcvars#clear()*
	Clear the cache.

vcvars#get({version} [, {arch}])		*vcvars#get()*
	Returns a |Dictionary| which contains following items.
	See |vcvars#call()| for arguments.

	"path"
		A |List| of folders to be set as PATH.

	"include"
		A |List| of folders to be set as INCLUDE.

	"lib"
		A |List| of folders to be set as LIB.

	"libpath"
		A |List| of folders to be set as LIBPATH.

vcvars#has({version})				*vcvars#has()*
	Returns non-zero when the specified {version} is found.
	See |vcvars#call()| for arguments.

vcvars#list()					*vcvars#list()*
	Returns a |List| which contains the versions of installed Visual Studio
	with C++ support. It is sorted in ascending order.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet
